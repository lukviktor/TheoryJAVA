package UITestingSprint_1;

import org.junit.jupiter.api.Test;

public class ConditionalOperators {
    @Test
    public void conditionalOperators() {
        boolean isFalse = false; // задали переменной isFalse значение «ложь»
        boolean isTrue = 50 > 0; // в переменной isTrue хранится значение true, потому что 50 больше 0
        System.out.println(isFalse);
        System.out.println(isTrue);
    }

    @Test
    public void apple(){
        boolean isAppleRed = false; // в переменной типа boolean задали условие: яблоки – красные
        if(isAppleRed) { // если условие выполняется,
            System.out.println("Купить яблоки"); // напечатается "Купить яблоки".
        }
        System.out.println("Пойти домой"); // "Пойти домой" напечатается в любом случае
    }

    /*
    Оператор	Значение
    ==	        равно
    !=	        не равно
    >	        больше
    <	        меньше
    >=	        больше или равно
    <=          меньше или равно
    */

    /*
    Условный оператор if

    if (условие) {
        код 1 // код 1 выполнится, если условие истинно
    }
    код 2 // код 2 выполнится в любом случае
    */

    /*
    Условный оператор if-else
    if (условие) {
        код 1 // Код 1 выполнится, только если условие == true
    } else {
        код 2 // Код 2 выполнится, только если условие == false
    }
    код 3 // Код 3 выполнится в любом случае
     */

    /*
    Цепочка операторов if-else if
    if(условие 1) {
        код 1 // Код выполнится, только если условие 1 == true
    } else if(условие 2) {
        код 2 // Код выполнится, только если условие 2 == true
    } else if(условие 3) {
            код 3 // Код выполнится, только если условие 3 == true
    } else {
        код 4 // Код выполнится, если не подошло ни одно из условий
    }
    */

    /*
    Вложенность условных операторов
    if (рыба свежая) {
  // вложенный if
    if (это корюшка) {
        купить 2 кг рыбы;
    } else {
        купить 1 кг рыбы;
    }
} else {
    купить мясо;
}
     */

    /*
    Код с логическими операторами
    И       —       &&
    ИЛИ     —       ||
    НЕ      —       !

    if (условие 1 && условие 2) { // должны выполняться условие 1 И условие 2
    выполнить код;
}


     */
}
